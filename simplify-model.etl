pre {
  "start transformations".println();
}

rule TransformProducts 
  transform sourceProd : source!Product
  to targetProd : 
  	tget!Product { 
  		guard : not sourceProd.issue.forAll(i|not i.isOpen)
  		
  		"".println("transforming product: ", sourceProd.name);
	  	targetProd.name = sourceProd.name;
	 	targetProd.issue.addAll(sourceProd.issue.select(i|i.isOpen).equivalent()); 		
	 	targetProd.version.addAll(sourceProd.version.equivalent()); 		
	}

rule TransformPeople
	transform sourcePerson : source!Person
	to targetPerson :
		tget!Person {
			guard : not source!Issue.all().select(i|i.reportedBy = sourcePerson or i.fixers.contains(sourcePerson)).select(i | i.isOpen).isEmpty()
	  		"".println("transforming person: ", sourcePerson.username);
	  		targetPerson.username = sourcePerson.username;
		}

rule TransformComments
	transform sourceComment : source!Comment
	to targetComment :
		tget!Comment {
	  		"".println("transforming person: ", sourceComment.commentID);
	  		targetComment.commentText = sourceComment.commentText;
	  		targetComment.commentID = sourceComment.commentID;
	  		
	  		targetComment.reply.addAll(sourceComment.reply.equivalent());
		}


rule TransformVersion
	transform sourceVersion : source!Version
	to targetVersion :
		tget!Version {
	  		"".println("transforming version: ", sourceVersion.name);
	  		targetVersion.name = sourceVersion.name;		
		}

rule TransformBugs 
  transform sourceBug : source!Bug
  to targetBug : 
  	tget!Bug {
		guard : sourceBug.isOpen

		"".println("  copying bug: ", sourceBug.issueID);
		
		targetBug.issueID = sourceBug.issueID;
		targetBug.title = sourceBug.title;
		targetBug.isOpen = sourceBug.isOpen;
		targetBug.duplicates = sourceBug.duplicates;
		targetBug.versions = sourceBug.versions;
		// For some reason this line causes an internal casting error. Why? TODO
		//targetBug.reportedBy = sourceBug.reportedBy;
		targetBug.fixers = sourceBug.fixers; 		 		 		

		targetBug.blockedIssues = sourceBug.blockedIssues;
		targetBug.comment.addAll(sourceBug.comment.equivalent());
	}

rule TransformEnhancements 
  transform sourceEnh : source!Enhancement
  to targetEnh : 
  	tget!Enhancement {
		guard : sourceEnh.isOpen
		
		"".println("  transforming enhancement: ", sourceEnh.issueID);
	  		
	  	targetEnh.issueID = targetEnh.issueID;
	 	targetEnh.title = targetEnh.title;
	  	targetEnh.isOpen = targetEnh.isOpen;
	 	targetEnh.duplicates = targetEnh.duplicates;
	 	targetEnh.versions = targetEnh.versions;
	 	targetEnh.reportedBy = targetEnh.reportedBy;
	 	targetEnh.fixers = targetEnh.fixers; 		 		 		
	
	 	targetEnh.blockedIssues = sourceEnh.blockedIssues;
	 	targetEnh.comment.addAll(sourceEnh.comment.equivalent());		 		 		 		
	}

post {
	var root : new tget!BugTracker;
	root.product.addAll(tget!Product.all);
	root.person.addAll(tget!Person.all);	
	"finish transformation".println();
}

